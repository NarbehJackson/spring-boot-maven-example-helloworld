def remote = [:]
remote.name = "jenkins"
remote.host = "192.168.50.50"
remote.allowAnyHosts = true

node {
           
        stage ("Git Check Out") {
            git changelog: false, credentialsId: '657284f1-e9bf-4d3d-96d8-7bb4c4c646de', poll: false, url: 'https://github.com/rchidana/spring-boot-maven-example-helloworld.git'
        }
        
        stage ("Build") {
          bat label: '', script: 'mvn package'
        }
        
		stage("Deploy SpringBoot App!") {
			  withCredentials([sshUserPrivateKey(credentialsId: 'jenkins-id-2', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'jenkins')]) {
				  remote.user = jenkins
				  remote.identityFile = identity
			
				  sshCommand remote: remote, command: 'mkdir deployment', failOnError:'false'
				  sshPut remote: remote, from: 'kill-boot.sh', into: '/home/jenkins/deployment'
				  sshPut remote: remote, from: 'deploy.sh', into: '/home/jenkins/deployment'
				  sshCommand remote: remote, command: 'cd /home/jenkins/deployment;dos2unix kill-boot.sh; chmod 777 kill-boot.sh; ./kill-boot.sh'
				  sshCommand remote: remote, command: 'rm /home/jenkins/deployment/*.war', failOnError:'false'
				  sshPut remote: remote, from: 'target/SpringBootMavenExample-1.3.5.RELEASE.war', into: '/home/jenkins/deployment/'
				  sshCommand remote: remote, command: 'cd /home/jenkins/deployment; dos2unix deploy.sh; chmod 777 deploy.sh;./deploy.sh'
				  sshRemove remote: remote, path: '/home/jenkins/deployment/kill-boot.sh'
				  sshRemove remote: remote, path: '/home/jenkins/deployment/deploy.sh'
			  }
        
      }
}
